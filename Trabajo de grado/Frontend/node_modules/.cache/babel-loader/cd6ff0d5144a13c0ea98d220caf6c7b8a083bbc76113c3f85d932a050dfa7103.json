{"ast":null,"code":"// frontend/src/components/AudioUploader.js\nimport React,{useState}from'react';import{uploadAudio,identifyInstrument}from'../Services/Api';import'./AudioUploader.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioUploader=_ref=>{let{onInstrumentIdentified}=_ref;const[audioFile,setAudioFile]=useState(null);const handleFileChange=e=>{setAudioFile(e.target.files[0]);};const handleUpload=async()=>{try{const uploadResponse=await uploadAudio(audioFile);const audioId=uploadResponse.data.id;const identifyResponse=await identifyInstrument(audioId);onInstrumentIdentified(identifyResponse.data.instrument);}catch(error){console.error('Error uploading or identifying audio',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"audio-uploader\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"custom-file-input\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{className:\"andean-button\",onClick:handleUpload,children:\"Clasificar\"})]});};export default AudioUploader;","map":{"version":3,"names":["React","useState","uploadAudio","identifyInstrument","jsx","_jsx","jsxs","_jsxs","AudioUploader","_ref","onInstrumentIdentified","audioFile","setAudioFile","handleFileChange","e","target","files","handleUpload","uploadResponse","audioId","data","id","identifyResponse","instrument","error","console","className","children","type","onChange","onClick"],"sources":["C:/Users/Willi/Downloads/Trabajo de grado 1/MusicMachineLearning/Trabajo de grado/Frontend/src/Components/AudioUploader.js"],"sourcesContent":["// frontend/src/components/AudioUploader.js\r\nimport React, { useState } from 'react';\r\nimport { uploadAudio, identifyInstrument } from '../Services/Api';\r\nimport './AudioUploader.css';\r\n\r\nconst AudioUploader = ({ onInstrumentIdentified }) => {\r\n    const [audioFile, setAudioFile] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setAudioFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        try {\r\n            const uploadResponse = await uploadAudio(audioFile);\r\n            const audioId = uploadResponse.data.id;\r\n            const identifyResponse = await identifyInstrument(audioId);\r\n            onInstrumentIdentified(identifyResponse.data.instrument);\r\n        } catch (error) {\r\n            console.error('Error uploading or identifying audio', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"audio-uploader\">\r\n            <input type=\"file\" className=\"custom-file-input\" onChange={handleFileChange} />\r\n            <button className=\"andean-button\" onClick={handleUpload}>Clasificar</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AudioUploader;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,CAAEC,kBAAkB,KAAQ,iBAAiB,CACjE,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,sBAAuB,CAAC,CAAAD,IAAA,CAC7C,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAEhD,KAAM,CAAAY,gBAAgB,CAAIC,CAAC,EAAK,CAC5BF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CACnC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACA,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAhB,WAAW,CAACS,SAAS,CAAC,CACnD,KAAM,CAAAQ,OAAO,CAAGD,cAAc,CAACE,IAAI,CAACC,EAAE,CACtC,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAAnB,kBAAkB,CAACgB,OAAO,CAAC,CAC1DT,sBAAsB,CAACY,gBAAgB,CAACF,IAAI,CAACG,UAAU,CAAC,CAC5D,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAChE,CACJ,CAAC,CAED,mBACIjB,KAAA,QAAKmB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BtB,IAAA,UAAOuB,IAAI,CAAC,MAAM,CAACF,SAAS,CAAC,mBAAmB,CAACG,QAAQ,CAAEhB,gBAAiB,CAAE,CAAC,cAC/ER,IAAA,WAAQqB,SAAS,CAAC,eAAe,CAACI,OAAO,CAAEb,YAAa,CAAAU,QAAA,CAAC,YAAU,CAAQ,CAAC,EAC3E,CAAC,CAEd,CAAC,CAED,cAAe,CAAAnB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}